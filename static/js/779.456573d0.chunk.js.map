{"version":3,"file":"static/js/779.456573d0.chunk.js","mappings":"mPAEaA,EAAcC,EAAAA,GAAAA,GAAH,gDAIXC,EAAcD,EAAAA,GAAAA,EAAH,qFAMXE,EAAgBF,EAAAA,GAAAA,EAAH,kE,SCmB1B,EA1BgB,WACd,OAA8BG,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAQR,OANAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBH,GACbI,KAAKL,GACLM,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAACN,IAEmB,IAAnBF,EAAQW,OACH,6CAIP,wBACGX,EAAQY,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,UAACpB,EAAD,YACE,UAACG,EAAD,sBAAwBgB,MACxB,SAACjB,EAAD,UAAckB,MAFEF,EADP,KAQlB,C,+LC3BDG,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAS,mCACTC,SAAU,SAGL,IAAMC,EAAiB,mCAAG,oGACRH,EAAAA,EAAAA,IAAA,uBADQ,cACzBI,EADyB,yBAExBA,EAASC,KAAKC,SAFU,2CAAH,qDAKjBC,EAAW,mCAAG,WAAMC,GAAN,uFACFR,EAAAA,EAAAA,IAAA,8BAAiCQ,IAD/B,cACnBJ,EADmB,yBAElBA,EAASC,KAAKC,SAFI,2CAAH,sDAKXG,EAAe,mCAAG,WAAMvB,GAAN,uFACNc,EAAAA,EAAAA,IAAA,iBAAoBd,IADd,cACvBkB,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,sDAKfK,EAAY,mCAAG,WAAMxB,GAAN,uFACHc,EAAAA,EAAAA,IAAA,iBAAoBd,EAApB,aADG,cACpBkB,EADoB,yBAEnBA,EAASC,KAAKM,MAFK,2CAAH,sDAKZtB,EAAe,mCAAG,WAAMH,GAAN,uFACNc,EAAAA,EAAAA,IAAA,iBAAoBd,EAApB,aADM,cACvBkB,EADuB,yBAEtBA,EAASC,KAAKC,SAFQ,2CAAH,qD","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewsItem = styled.li`\n  margin-bottom: 32px;\n`;\n\nexport const RewievsText = styled.p`\n  margin-top: 8px;\n  font-size: 16px;\n  line-height: 1.5;\n`;\n\nexport const ReviewsAuthor = styled.p`\n  font-size: 16px;\n  font-weight: bold;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from '../../services/api';\nimport { ReviewsItem, RewievsText, ReviewsAuthor } from './Reviews.styled.js';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieReviews(movieId)\n      .then(setReviews)\n      .catch(error => console.log(error));\n  }, [movieId]);\n\n  if (reviews.length === 0) {\n    return \"We don't have any reviews for this movie.\";\n  }\n\n  return (\n    <ul>\n      {reviews.map(({ id, author, content }) => (\n        <ReviewsItem key={id}>\n          <ReviewsAuthor>Author: {author}</ReviewsAuthor>\n          <RewievsText>{content}</RewievsText>\n        </ReviewsItem>\n      ))}\n    </ul>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: '5bf2301def796bd57cd8c3257ce93f54',\n  language: 'en-US',\n};\n\nexport const getTrandingMovies = async () => {\n  const response = await axios.get(`/trending/movie/day`);\n  return response.data.results;\n};\n\nexport const searchMovie = async query => {\n  const response = await axios.get(`/search/movie?query=${query}`);\n  return response.data.results;\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(`/movie/${movieId}`);\n  return response.data;\n};\n\nexport const getMovieCast = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/credits`);\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/reviews`);\n  return response.data.results;\n};\n"],"names":["ReviewsItem","styled","RewievsText","ReviewsAuthor","useState","reviews","setReviews","movieId","useParams","useEffect","getMovieReviews","then","catch","error","console","log","length","map","id","author","content","axios","api_key","language","getTrandingMovies","response","data","results","searchMovie","query","getMovieDetails","getMovieCast","cast"],"sourceRoot":""}